name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:
    inputs:
      node-version:
        description: "The node version to use"
        required: false
        default: "18"
      package-manager:
        description: "You may specify your preferred package manager (one of `npm | yarn | pnpm | bun` and an optional `@<version>` tag). Otherwise, the package manager will be automatically detected."
        required: false
        default: ""
      path:
        description: "Path of the directory containing your site"
        required: false
        default: "."

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3

      - name: Check lockfiles
        shell: "bash"
        env:
          INPUT_PM: ${{ inputs.package-manager }}
        run: |
          len=`echo $INPUT_PM | wc -c`
          if [ $len -gt 1 ]; then
            PACKAGE_MANAGER=$(echo "$INPUT_PM" | grep -o '^[^@]*')
            VERSION=$(echo "$INPUT_PM" | grep -o '@.*' | sed 's/^@//')
            # Set default VERSION if not provided
            if [ -z "$VERSION" ]; then
                VERSION="latest"
            fi
            echo "PACKAGE_MANAGER=$PACKAGE_MANAGER" >> $GITHUB_ENV
          elif [ $(find "." -name "pnpm-lock.yaml") ]; then
              echo "PACKAGE_MANAGER=pnpm" >> $GITHUB_ENV
              echo "LOCKFILE=pnpm-lock.yaml" >> $GITHUB_ENV
          elif [ $(find "." -name "yarn.lock") ]; then 
              echo "PACKAGE_MANAGER=yarn" >> $GITHUB_ENV
              echo "LOCKFILE=yarn.lock" >> $GITHUB_ENV
          elif [ $(find "." -name "package-lock.json") ]; then 
              VERSION="latest"
              echo "PACKAGE_MANAGER=npm" >> $GITHUB_ENV
              echo "LOCKFILE=package-lock.json" >> $GITHUB_ENV
          elif [ $(find "." -name "bun.lockb") ]; then 
              VERSION="latest"
              echo "PACKAGE_MANAGER=bun" >> $GITHUB_ENV
              echo "LOCKFILE=bun.lockb" >> $GITHUB_ENV
          else
              echo "No lockfile found.
          Please specify your preferred \"package-manager\" in the action configuration."
              exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
  
      - name: Setup Node
        uses: actions/setup-node@v3
        if: ${{ env.PACKAGE_MANAGER != 'bun' }}
        with:
          node-version: ${{ inputs.node-version }}
          cache: ${{ env.PACKAGE_MANAGER }}
          cache-dependency-path: "${{ inputs.path }}/${{ env.LOCKFILE }}"
  
      - name: Install
        shell: "bash"
        run: |
          cd ${{ inputs.path }}
          $PACKAGE_MANAGER install
  
      - name: Build
        shell: "bash"
        run: |
          cd ${{ inputs.path }}
          $PACKAGE_MANAGER run build
      # - name: Install, build, and upload your site
      #   uses: withastro/action@v1
      #   with:
      #     # path: . # The root location of your Astro project inside the repository. (optional)
      #     # node-version: 18 # The specific version of Node that should be used to build your site. Defaults to 18. (optional)
      #     package-manager: npm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
